{"ast":null,"code":"import{createContext,useMemo,useEffect}from'react';import{useDispatch}from'react-redux';import{actions as messagesActions}from'../slices/Messages.js';import{actions as channelsActions}from'../slices/Channels.js';import{jsx as _jsx}from\"react/jsx-runtime\";const ChatContext=/*#__PURE__*/createContext({});const ChatProvider=_ref=>{let{socket,children}=_ref;const dispatch=useDispatch();useEffect(()=>{socket.on('newMessage',message=>{dispatch(messagesActions.addMessage(message));});socket.on('newChannel',channel=>{dispatch(channelsActions.addChannel(channel));});socket.on('removeChannel',payload=>{dispatch(channelsActions.removeChannel(payload.id));});socket.on('renameChannel',payload=>{dispatch(channelsActions.renameChannel({id:payload.id,changes:payload}));});});const sendNewMessage=async message=>{await new Promise((resolve,reject)=>{socket.timeout(5000).emit('newMessage',message,(err,response)=>{if((response===null||response===void 0?void 0:response.status)==='ok'){resolve(response);}else{reject(err);}});});};const createChannel=name=>new Promise((resolve,reject)=>{socket.timeout(5000).emit('newChannel',{name},(err,response)=>{if((response===null||response===void 0?void 0:response.status)==='ok'){resolve(response);}else{reject(err);}});});const removeChannel=async id=>{await new Promise((resolve,reject)=>{socket.timeout(5000).emit('removeChannel',{id},(err,response)=>{if((response===null||response===void 0?void 0:response.status)==='ok'){resolve(response);}else{reject(err);}});});};const renameChannel=async(id,name)=>{await new Promise((resolve,reject)=>{socket.timeout(5000).emit('renameChannel',{id,name},(err,response)=>{if((response===null||response===void 0?void 0:response.status)==='ok'){resolve(response);}else{reject(err);}});});};const value=useMemo(()=>({sendNewMessage,createChannel,removeChannel,renameChannel}),[]);return/*#__PURE__*/_jsx(ChatContext.Provider,{value:value,children:children});};export{ChatProvider};export default ChatContext;","map":{"version":3,"names":["createContext","useMemo","useEffect","useDispatch","actions","messagesActions","channelsActions","jsx","_jsx","ChatContext","ChatProvider","_ref","socket","children","dispatch","on","message","addMessage","channel","addChannel","payload","removeChannel","id","renameChannel","changes","sendNewMessage","Promise","resolve","reject","timeout","emit","err","response","status","createChannel","name","value","Provider"],"sources":["/home/jenmaru/hexletproject/frontend-project-12/frontend/src/contexts/chatContext.jsx"],"sourcesContent":["import {\n  createContext, useMemo, useEffect,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as messagesActions } from '../slices/Messages.js';\nimport { actions as channelsActions } from '../slices/Channels.js';\n\nconst ChatContext = createContext({});\n\nconst ChatProvider = ({ socket, children }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    socket.on('newMessage', (message) => {\n      dispatch(messagesActions.addMessage(message));\n    });\n\n    socket.on('newChannel', (channel) => {\n      dispatch(channelsActions.addChannel(channel));\n    });\n\n    socket.on('removeChannel', (payload) => {\n      dispatch(channelsActions.removeChannel(payload.id));\n    });\n\n    socket.on('renameChannel', (payload) => {\n      dispatch(channelsActions.renameChannel({ id: payload.id, changes: payload }));\n    });\n  });\n\n  const sendNewMessage = async (message) => {\n    await new Promise((resolve, reject) => {\n      socket.timeout(5000).emit('newMessage', message, (err, response) => {\n        if (response?.status === 'ok') {\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  };\n\n  const createChannel = (name) => new Promise((resolve, reject) => {\n    socket.timeout(5000).emit('newChannel', { name }, (err, response) => {\n      if (response?.status === 'ok') {\n        resolve(response);\n      } else {\n        reject(err);\n      }\n    });\n  });\n\n  const removeChannel = async (id) => {\n    await new Promise((resolve, reject) => {\n      socket.timeout(5000).emit('removeChannel', { id }, (err, response) => {\n        if (response?.status === 'ok') {\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  };\n\n  const renameChannel = async (id, name) => {\n    await new Promise((resolve, reject) => {\n      socket.timeout(5000).emit('renameChannel', { id, name }, (err, response) => {\n        if (response?.status === 'ok') {\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  };\n\n  const value = useMemo(() => ({\n    sendNewMessage,\n    createChannel,\n    removeChannel,\n    renameChannel,\n  }), []);\n\n  return (\n    <ChatContext.Provider value={value}>\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport { ChatProvider };\nexport default ChatContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}