{"ast":null,"code":"var _jsxFileName = \"/home/jenmaru/hexletproject/frontend-project-12/frontend/src/components/modalComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { actions, selectors } from '../slices/Modals.js';\nimport AddChannel from '../modals/addModalWindow.jsx';\nimport RemoveChannel from '../modals/removeModalWindow.jsx';\nimport RenameChannel from '../modals/renameModalWindow.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalComponent = () => {\n  _s();\n  const dispatch = useDispatch();\n  const handleClose = () => dispatch(actions.closeModal());\n  const modal = useSelector(selectors.selectAll);\n  console.log(modal);\n  const show = false;\n  const modalType = null;\n  const toastMessage = (message, result) => {\n    const toastLabel = result === 'success' ? toast.success(message, {\n      toastId: `${message} success`\n    }) : toast.error(message, {\n      toastId: `${message} error`\n    });\n    return toastLabel;\n  };\n  useEffect(() => {\n    dispatch(actions.closeModal({\n      show: false,\n      type: 'closed',\n      id: null\n    }));\n  });\n  const setModal = {\n    add: /*#__PURE__*/_jsxDEV(AddChannel, {\n      show: show,\n      handleClose: handleClose,\n      toast: toastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this),\n    remove: /*#__PURE__*/_jsxDEV(RemoveChannel, {\n      show: show,\n      handleClose: handleClose,\n      toast: toastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this),\n    rename: /*#__PURE__*/_jsxDEV(RenameChannel, {\n      show: show,\n      handleClose: handleClose,\n      toast: toastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: show === true ? setModal[modalType] : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalComponent, \"SHZXHue6/a/1r03+qRU4ai+2vz8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ModalComponent;\nexport default ModalComponent;\nvar _c;\n$RefreshReg$(_c, \"ModalComponent\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","toast","actions","selectors","AddChannel","RemoveChannel","RenameChannel","jsxDEV","_jsxDEV","ModalComponent","_s","dispatch","handleClose","closeModal","modal","selectAll","console","log","show","modalType","toastMessage","message","result","toastLabel","success","toastId","error","type","id","setModal","add","fileName","_jsxFileName","lineNumber","columnNumber","remove","rename","children","_c","$RefreshReg$"],"sources":["/home/jenmaru/hexletproject/frontend-project-12/frontend/src/components/modalComponent.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { actions, selectors } from '../slices/Modals.js';\nimport AddChannel from '../modals/addModalWindow.jsx';\nimport RemoveChannel from '../modals/removeModalWindow.jsx';\nimport RenameChannel from '../modals/renameModalWindow.jsx';\n\nconst ModalComponent = () => {\n  const dispatch = useDispatch();\n  const handleClose = () => dispatch(actions.closeModal());\n  const modal = useSelector(selectors.selectAll);\n  console.log(modal);\n  const show = false;\n  const modalType = null;\n  const toastMessage = (message, result) => {\n    const toastLabel = result === 'success' ? toast.success(message, { toastId: `${message} success` })\n      : toast.error(message, { toastId: `${message} error` });\n    return toastLabel;\n  };\n\n  useEffect(() => {\n    dispatch(actions.closeModal({ show: false, type: 'closed', id: null }));\n  });\n\n  const setModal = {\n    add: <AddChannel show={show} handleClose={handleClose} toast={toastMessage} />,\n    remove: <RemoveChannel show={show} handleClose={handleClose} toast={toastMessage} />,\n    rename: <RenameChannel show={show} handleClose={handleClose} toast={toastMessage} />,\n  };\n\n  return (\n    <div>\n      {show === true ? setModal[modalType] : null}\n    </div>\n  );\n};\n\nexport default ModalComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,OAAO,EAAEC,SAAS,QAAQ,qBAAqB;AACxD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,aAAa,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,WAAW,GAAGA,CAAA,KAAMD,QAAQ,CAACT,OAAO,CAACW,UAAU,CAAC,CAAC,CAAC;EACxD,MAAMC,KAAK,GAAGf,WAAW,CAACI,SAAS,CAACY,SAAS,CAAC;EAC9CC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAClB,MAAMI,IAAI,GAAG,KAAK;EAClB,MAAMC,SAAS,GAAG,IAAI;EACtB,MAAMC,YAAY,GAAGA,CAACC,OAAO,EAAEC,MAAM,KAAK;IACxC,MAAMC,UAAU,GAAGD,MAAM,KAAK,SAAS,GAAGrB,KAAK,CAACuB,OAAO,CAACH,OAAO,EAAE;MAAEI,OAAO,EAAG,GAAEJ,OAAQ;IAAU,CAAC,CAAC,GAC/FpB,KAAK,CAACyB,KAAK,CAACL,OAAO,EAAE;MAAEI,OAAO,EAAG,GAAEJ,OAAQ;IAAQ,CAAC,CAAC;IACzD,OAAOE,UAAU;EACnB,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACda,QAAQ,CAACT,OAAO,CAACW,UAAU,CAAC;MAAEK,IAAI,EAAE,KAAK;MAAES,IAAI,EAAE,QAAQ;MAAEC,EAAE,EAAE;IAAK,CAAC,CAAC,CAAC;EACzE,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAG;IACfC,GAAG,eAAEtB,OAAA,CAACJ,UAAU;MAACc,IAAI,EAAEA,IAAK;MAACN,WAAW,EAAEA,WAAY;MAACX,KAAK,EAAEmB;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC9EC,MAAM,eAAE3B,OAAA,CAACH,aAAa;MAACa,IAAI,EAAEA,IAAK;MAACN,WAAW,EAAEA,WAAY;MAACX,KAAK,EAAEmB;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACpFE,MAAM,eAAE5B,OAAA,CAACF,aAAa;MAACY,IAAI,EAAEA,IAAK;MAACN,WAAW,EAAEA,WAAY;MAACX,KAAK,EAAEmB;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACrF,CAAC;EAED,oBACE1B,OAAA;IAAA6B,QAAA,EACGnB,IAAI,KAAK,IAAI,GAAGW,QAAQ,CAACV,SAAS,CAAC,GAAG;EAAI;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA5BID,cAAc;EAAA,QACDT,WAAW,EAEdD,WAAW;AAAA;AAAAuC,EAAA,GAHrB7B,cAAc;AA8BpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}