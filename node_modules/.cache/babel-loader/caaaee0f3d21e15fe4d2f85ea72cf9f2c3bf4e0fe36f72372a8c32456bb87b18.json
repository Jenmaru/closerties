{"ast":null,"code":"import React from'react';import{useSelector,useDispatch}from'react-redux';import{toast}from'react-toastify';import{actions}from'../slices/Modals.js';import AddChannel from'../modals/add.jsx';import RemoveChannel from'../modals/remove.jsx';import RenameChannel from'../modals/rename.jsx';import{jsx as _jsx}from\"react/jsx-runtime\";const ModalComponent=()=>{const dispatch=useDispatch();const handleClose=()=>dispatch(actions.closeModal());const modal=useSelector(state=>state.modal);const{show,type}=modal;const toastMessage=(message,result)=>{const toastLabel=result==='success'?toast.success(message,{toastId:\"\".concat(message,\" success\")}):toast.error(message,{toastId:\"\".concat(message,\" error\")});return toastLabel;};const setModal={add:/*#__PURE__*/_jsx(AddChannel,{show:show,handleClose:handleClose,toast:toastMessage}),remove:/*#__PURE__*/_jsx(RemoveChannel,{show:show,handleClose:handleClose,toast:toastMessage}),rename:/*#__PURE__*/_jsx(RenameChannel,{show:show,handleClose:handleClose,toast:toastMessage}),closed:null};return/*#__PURE__*/_jsx(\"div\",{children:setModal[type]});};export default ModalComponent;","map":{"version":3,"names":["React","useSelector","useDispatch","toast","actions","AddChannel","RemoveChannel","RenameChannel","jsx","_jsx","ModalComponent","dispatch","handleClose","closeModal","modal","state","show","type","toastMessage","message","result","toastLabel","success","toastId","concat","error","setModal","add","remove","rename","closed","children"],"sources":["/home/jenmaru/hexletproject/frontend-project-12/frontend/src/components/Modal.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { actions } from '../slices/Modals.js';\nimport AddChannel from '../modals/add.jsx';\nimport RemoveChannel from '../modals/remove.jsx';\nimport RenameChannel from '../modals/rename.jsx';\n\nconst ModalComponent = () => {\n  const dispatch = useDispatch();\n  const handleClose = () => dispatch(actions.closeModal());\n  const modal = useSelector((state) => state.modal);\n  const { show, type } = modal;\n  const toastMessage = (message, result) => {\n    const toastLabel = result === 'success' ? toast.success(message, { toastId: `${message} success` })\n      : toast.error(message, { toastId: `${message} error` });\n    return toastLabel;\n  };\n\n  const setModal = {\n    add: <AddChannel show={show} handleClose={handleClose} toast={toastMessage} />,\n    remove: <RemoveChannel show={show} handleClose={handleClose} toast={toastMessage} />,\n    rename: <RenameChannel show={show} handleClose={handleClose} toast={toastMessage} />,\n    closed: null,\n  };\n\n  return (\n    <div>\n      {setModal[type]}\n    </div>\n  );\n};\n\nexport default ModalComponent;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,KAAK,KAAQ,gBAAgB,CACtC,OAASC,OAAO,KAAQ,qBAAqB,CAC7C,MAAO,CAAAC,UAAU,KAAM,mBAAmB,CAC1C,MAAO,CAAAC,aAAa,KAAM,sBAAsB,CAChD,MAAO,CAAAC,aAAa,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAU,WAAW,CAAGA,CAAA,GAAMD,QAAQ,CAACP,OAAO,CAACS,UAAU,CAAC,CAAC,CAAC,CACxD,KAAM,CAAAC,KAAK,CAAGb,WAAW,CAAEc,KAAK,EAAKA,KAAK,CAACD,KAAK,CAAC,CACjD,KAAM,CAAEE,IAAI,CAAEC,IAAK,CAAC,CAAGH,KAAK,CAC5B,KAAM,CAAAI,YAAY,CAAGA,CAACC,OAAO,CAAEC,MAAM,GAAK,CACxC,KAAM,CAAAC,UAAU,CAAGD,MAAM,GAAK,SAAS,CAAGjB,KAAK,CAACmB,OAAO,CAACH,OAAO,CAAE,CAAEI,OAAO,IAAAC,MAAA,CAAKL,OAAO,YAAW,CAAC,CAAC,CAC/FhB,KAAK,CAACsB,KAAK,CAACN,OAAO,CAAE,CAAEI,OAAO,IAAAC,MAAA,CAAKL,OAAO,UAAS,CAAC,CAAC,CACzD,MAAO,CAAAE,UAAU,CACnB,CAAC,CAED,KAAM,CAAAK,QAAQ,CAAG,CACfC,GAAG,cAAElB,IAAA,CAACJ,UAAU,EAACW,IAAI,CAAEA,IAAK,CAACJ,WAAW,CAAEA,WAAY,CAACT,KAAK,CAAEe,YAAa,CAAE,CAAC,CAC9EU,MAAM,cAAEnB,IAAA,CAACH,aAAa,EAACU,IAAI,CAAEA,IAAK,CAACJ,WAAW,CAAEA,WAAY,CAACT,KAAK,CAAEe,YAAa,CAAE,CAAC,CACpFW,MAAM,cAAEpB,IAAA,CAACF,aAAa,EAACS,IAAI,CAAEA,IAAK,CAACJ,WAAW,CAAEA,WAAY,CAACT,KAAK,CAAEe,YAAa,CAAE,CAAC,CACpFY,MAAM,CAAE,IACV,CAAC,CAED,mBACErB,IAAA,QAAAsB,QAAA,CACGL,QAAQ,CAACT,IAAI,CAAC,CACZ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}