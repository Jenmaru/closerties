{"ast":null,"code":"var _jsxFileName = \"/home/jenmaru/hexletproject/frontend-project-12/frontend/src/contexts/chatContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions as messagesActions } from '../slices/Messages.js';\nimport { actions as channelsActions, selectors } from '../slices/Channels.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext({});\nconst ChatProvider = ({\n  socket,\n  children\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [currentChannel, setCurrentChannel] = useState({\n    id: 1,\n    name: 'general'\n  });\n  const channels = useSelector(selectors.selectAll);\n  useEffect(() => {\n    socket.on('newMessage', message => {\n      dispatch(messagesActions.addMessage(message));\n    });\n    socket.on('newChannel', channel => {\n      dispatch(channelsActions.addChannel(channel));\n    });\n    socket.on('removeChannel', payload => {\n      dispatch(channelsActions.removeChannel(payload.id));\n      setCurrentChannel(channels[0]);\n    });\n    socket.on('renameChannel', payload => {\n      dispatch(channelsActions.renameChannel({\n        id: payload.id,\n        changes: payload\n      }));\n      setCurrentChannel(payload);\n    });\n  });\n  const sendNewMessage = async message => {\n    await new Promise((resolve, reject) => {\n      socket.timeout(5000).emit('newMessage', message, (err, response) => {\n        if ((response === null || response === void 0 ? void 0 : response.status) === 'ok') {\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  };\n  const createChannel = async name => {\n    await new Promise((resolve, reject) => {\n      socket.timeout(5000).emit('newChannel', {\n        name\n      }, (err, response) => {\n        if ((response === null || response === void 0 ? void 0 : response.status) === 'ok') {\n          setCurrentChannel(response.data);\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  };\n  const removeChannel = async id => {\n    await new Promise((resolve, reject) => {\n      socket.timeout(5000).emit('removeChannel', {\n        id\n      }, (err, response) => {\n        if ((response === null || response === void 0 ? void 0 : response.status) === 'ok') {\n          setCurrentChannel(channels[0]);\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  };\n  const renameChannel = async (id, name) => {\n    await new Promise((resolve, reject) => {\n      socket.timeout(5000).emit('renameChannel', {\n        id,\n        name\n      }, (err, response) => {\n        if ((response === null || response === void 0 ? void 0 : response.status) === 'ok') {\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  };\n  const value = useMemo(() => ({\n    sendNewMessage,\n    createChannel,\n    removeChannel,\n    renameChannel,\n    currentChannel,\n    setCurrentChannel\n  }), [currentChannel, setCurrentChannel]);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatProvider, \"GRHUbZzjapq2JH8yH8i0KybCnm8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ChatProvider;\nexport { ChatProvider };\nexport default ChatContext;\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["createContext","useState","useMemo","useEffect","useDispatch","useSelector","actions","messagesActions","channelsActions","selectors","jsxDEV","_jsxDEV","ChatContext","ChatProvider","socket","children","_s","dispatch","currentChannel","setCurrentChannel","id","name","channels","selectAll","on","message","addMessage","channel","addChannel","payload","removeChannel","renameChannel","changes","sendNewMessage","Promise","resolve","reject","timeout","emit","err","response","status","createChannel","data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jenmaru/hexletproject/frontend-project-12/frontend/src/contexts/chatContext.jsx"],"sourcesContent":["import {\n  createContext, useState, useMemo, useEffect,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions as messagesActions } from '../slices/Messages.js';\nimport { actions as channelsActions, selectors } from '../slices/Channels.js';\n\nconst ChatContext = createContext({});\n\nconst ChatProvider = ({ socket, children }) => {\n  const dispatch = useDispatch();\n\n  const [currentChannel, setCurrentChannel] = useState({ id: 1, name: 'general' });\n  const channels = useSelector(selectors.selectAll);\n\n  useEffect(() => {\n    socket.on('newMessage', (message) => {\n      dispatch(messagesActions.addMessage(message));\n    });\n\n    socket.on('newChannel', (channel) => {\n      dispatch(channelsActions.addChannel(channel));\n    });\n\n    socket.on('removeChannel', (payload) => {\n      dispatch(channelsActions.removeChannel(payload.id));\n      setCurrentChannel(channels[0]);\n    });\n\n    socket.on('renameChannel', (payload) => {\n      dispatch(channelsActions.renameChannel({ id: payload.id, changes: payload }));\n      setCurrentChannel(payload);\n    });\n  });\n\n  const sendNewMessage = async (message) => {\n    await new Promise((resolve, reject) => {\n      socket.timeout(5000).emit('newMessage', message, (err, response) => {\n        if (response?.status === 'ok') {\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  };\n\n  const createChannel = async (name) => {\n    await new Promise((resolve, reject) => {\n      socket.timeout(5000).emit('newChannel', { name }, (err, response) => {\n        if (response?.status === 'ok') {\n          setCurrentChannel(response.data);\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  };\n\n  const removeChannel = async (id) => {\n    await new Promise((resolve, reject) => {\n      socket.timeout(5000).emit('removeChannel', { id }, (err, response) => {\n        if (response?.status === 'ok') {\n          setCurrentChannel(channels[0]);\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  };\n\n  const renameChannel = async (id, name) => {\n    await new Promise((resolve, reject) => {\n      socket.timeout(5000).emit('renameChannel', { id, name }, (err, response) => {\n        if (response?.status === 'ok') {\n          resolve(response);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  };\n\n  const value = useMemo(() => ({\n    sendNewMessage,\n    createChannel,\n    removeChannel,\n    renameChannel,\n    currentChannel,\n    setCurrentChannel,\n  }), [currentChannel, setCurrentChannel]);\n\n  return (\n    <ChatContext.Provider value={value}>\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport { ChatProvider };\nexport default ChatContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}