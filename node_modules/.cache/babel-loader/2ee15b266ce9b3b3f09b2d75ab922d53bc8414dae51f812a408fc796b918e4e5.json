{"ast":null,"code":"var _jsxFileName = \"/home/jenmaru/myProject/closerties/src/components/Buttons.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonsLink = () => {\n  _s();\n  const [checked, setChecked] = useState(false);\n  const [radioValue, setRadioValue] = useState('1');\n  const radios = [{\n    name: 'Active',\n    value: '1'\n  }, {\n    name: 'Radio',\n    value: '2'\n  }, {\n    name: 'Radio',\n    value: '3'\n  }];\n  return /*#__PURE__*/_jsxDEV(ButtonGroup, {\n    children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n      id: `radio-${idx}`,\n      type: \"radio\",\n      variant: idx % 2 ? 'outline-success' : 'outline-danger',\n      name: \"radio\",\n      value: radio.value,\n      checked: radioValue === radio.value,\n      onChange: e => setRadioValue(e.currentTarget.value),\n      children: radio.name\n    }, \"2\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonsLink, \"u8HBHezDv6+Ud4vmWbnEkotqWsM=\");\n_c = ButtonsLink;\nexport default ButtonsLink;\nvar _c;\n$RefreshReg$(_c, \"ButtonsLink\");","map":{"version":3,"names":["useState","ButtonGroup","ToggleButton","jsxDEV","_jsxDEV","ButtonsLink","_s","checked","setChecked","radioValue","setRadioValue","radios","name","value","children","map","radio","idx","id","type","variant","onChange","e","currentTarget","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jenmaru/myProject/closerties/src/components/Buttons.jsx"],"sourcesContent":["import { useState } from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\n\nconst ButtonsLink = () => {\n  const [checked, setChecked] = useState(false);\n  const [radioValue, setRadioValue] = useState('1');\n\n  const radios = [\n    { name: 'Active', value: '1' },\n    { name: 'Radio', value: '2' },\n    { name: 'Radio', value: '3' },\n  ];\n\n  return (\n    <ButtonGroup>\n      {radios.map((radio, idx) => (\n        <ToggleButton\n          key=\"2\"\n          id={`radio-${idx}`}\n          type=\"radio\"\n          variant={idx % 2 ? 'outline-success' : 'outline-danger'}\n          name=\"radio\"\n          value={radio.value}\n          checked={radioValue === radio.value}\n          onChange={(e) => setRadioValue(e.currentTarget.value)}\n        >\n          {radio.name}\n        </ToggleButton>\n      ))}\n    </ButtonGroup>\n  );\n};\n\nexport default ButtonsLink;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,GAAG,CAAC;EAEjD,MAAMW,MAAM,GAAG,CACb;IAAEC,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC9B;IAAED,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC7B;IAAED,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAI,CAAC,CAC9B;EAED,oBACET,OAAA,CAACH,WAAW;IAAAa,QAAA,EACTH,MAAM,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACrBb,OAAA,CAACF,YAAY;MAEXgB,EAAE,EAAG,SAAQD,GAAI,EAAE;MACnBE,IAAI,EAAC,OAAO;MACZC,OAAO,EAAEH,GAAG,GAAG,CAAC,GAAG,iBAAiB,GAAG,gBAAiB;MACxDL,IAAI,EAAC,OAAO;MACZC,KAAK,EAAEG,KAAK,CAACH,KAAM;MACnBN,OAAO,EAAEE,UAAU,KAAKO,KAAK,CAACH,KAAM;MACpCQ,QAAQ,EAAGC,CAAC,IAAKZ,aAAa,CAACY,CAAC,CAACC,aAAa,CAACV,KAAK,CAAE;MAAAC,QAAA,EAErDE,KAAK,CAACJ;IAAI,GATP,GAAG;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUK,CACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAElB,CAAC;AAACrB,EAAA,CA5BID,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}