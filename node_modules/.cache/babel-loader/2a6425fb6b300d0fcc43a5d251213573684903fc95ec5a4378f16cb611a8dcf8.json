{"ast":null,"code":"import{useRef,useEffect}from'react';import{useSelector}from'react-redux';import LeoProfanity from'leo-profanity';import{selectors}from'../slices/Messages.js';import{getCurrentChannel}from'../slices/Channels.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const RenderMessageComponent=()=>{const currentChannel=useSelector(getCurrentChannel);const messageRef=useRef();const messages=useSelector(selectors.selectAll);const currentMessages=messages.filter(message=>message.channelId===currentChannel.id);useEffect(()=>{messageRef.current.scrollIntoView({behavior:'smooth'});},[currentMessages]);return/*#__PURE__*/_jsxs(\"div\",{id:\"messages-box\",className:\"chat-messages overflow-auto px-5\",children:[currentMessages.map(message=>/*#__PURE__*/_jsxs(\"div\",{className:\"text-break mb-2\",children:[/*#__PURE__*/_jsx(\"b\",{children:message.username}),\":\",\" \".concat(LeoProfanity.clean(message.body))]},message.id)),/*#__PURE__*/_jsx(\"span\",{ref:messageRef})]});};export default RenderMessageComponent;","map":{"version":3,"names":["useRef","useEffect","useSelector","LeoProfanity","selectors","getCurrentChannel","jsx","_jsx","jsxs","_jsxs","RenderMessageComponent","currentChannel","messageRef","messages","selectAll","currentMessages","filter","message","channelId","id","current","scrollIntoView","behavior","className","children","map","username","concat","clean","body","ref"],"sources":["/home/jenmaru/hexletproject/frontend-project-12/frontend/src/components/renderMessage.jsx"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport LeoProfanity from 'leo-profanity';\nimport { selectors } from '../slices/Messages.js';\nimport { getCurrentChannel } from '../slices/Channels.js';\n\nconst RenderMessageComponent = () => {\n  const currentChannel = useSelector(getCurrentChannel);\n  const messageRef = useRef();\n  const messages = useSelector(selectors.selectAll);\n\n  const currentMessages = messages.filter((message) => message.channelId === currentChannel.id);\n\n  useEffect(() => {\n    messageRef.current.scrollIntoView({\n      behavior: 'smooth',\n    });\n  }, [currentMessages]);\n\n  return (\n    <div id=\"messages-box\" className=\"chat-messages overflow-auto px-5\">\n      { currentMessages.map((message) => (\n        <div key={message.id} className=\"text-break mb-2\">\n          <b>{message.username}</b>\n          :\n          {` ${LeoProfanity.clean(message.body)}`}\n        </div>\n      ))}\n      <span ref={messageRef} />\n    </div>\n  );\n};\n\nexport default RenderMessageComponent;\n"],"mappings":"AAAA,OAASA,MAAM,CAAEC,SAAS,KAAQ,OAAO,CACzC,OAASC,WAAW,KAAQ,aAAa,CACzC,MAAO,CAAAC,YAAY,KAAM,eAAe,CACxC,OAASC,SAAS,KAAQ,uBAAuB,CACjD,OAASC,iBAAiB,KAAQ,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1D,KAAM,CAAAC,sBAAsB,CAAGA,CAAA,GAAM,CACnC,KAAM,CAAAC,cAAc,CAAGT,WAAW,CAACG,iBAAiB,CAAC,CACrD,KAAM,CAAAO,UAAU,CAAGZ,MAAM,CAAC,CAAC,CAC3B,KAAM,CAAAa,QAAQ,CAAGX,WAAW,CAACE,SAAS,CAACU,SAAS,CAAC,CAEjD,KAAM,CAAAC,eAAe,CAAGF,QAAQ,CAACG,MAAM,CAAEC,OAAO,EAAKA,OAAO,CAACC,SAAS,GAAKP,cAAc,CAACQ,EAAE,CAAC,CAE7FlB,SAAS,CAAC,IAAM,CACdW,UAAU,CAACQ,OAAO,CAACC,cAAc,CAAC,CAChCC,QAAQ,CAAE,QACZ,CAAC,CAAC,CACJ,CAAC,CAAE,CAACP,eAAe,CAAC,CAAC,CAErB,mBACEN,KAAA,QAAKU,EAAE,CAAC,cAAc,CAACI,SAAS,CAAC,kCAAkC,CAAAC,QAAA,EAC/DT,eAAe,CAACU,GAAG,CAAER,OAAO,eAC5BR,KAAA,QAAsBc,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC/CjB,IAAA,MAAAiB,QAAA,CAAIP,OAAO,CAACS,QAAQ,CAAI,CAAC,IAEzB,KAAAC,MAAA,CAAKxB,YAAY,CAACyB,KAAK,CAACX,OAAO,CAACY,IAAI,CAAC,IAH7BZ,OAAO,CAACE,EAIb,CACN,CAAC,cACFZ,IAAA,SAAMuB,GAAG,CAAElB,UAAW,CAAE,CAAC,EACtB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAF,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}