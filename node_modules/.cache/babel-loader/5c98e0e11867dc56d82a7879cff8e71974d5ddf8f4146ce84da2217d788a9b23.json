{"ast":null,"code":"import{createContext,useEffect,useMemo,useCallback}from'react';import{useDispatch}from'react-redux';import{actions as messagesActions}from'../slices/Messages.js';import{actions as channelsActions}from'../slices/Channels.js';import{jsx as _jsx}from\"react/jsx-runtime\";const ChatContext=/*#__PURE__*/createContext({});const ChatProvider=_ref=>{let{socket,children}=_ref;const dispatch=useDispatch();useEffect(()=>{socket.on('newMessage',message=>{dispatch(messagesActions.addMessage(message));});socket.on('newChannel',channel=>{dispatch(channelsActions.addChannel(channel));});socket.on('removeChannel',payload=>{dispatch(channelsActions.removeChannel(payload.id));});socket.on('renameChannel',payload=>{dispatch(channelsActions.renameChannel({id:payload.id,changes:payload}));});},[dispatch,socket]);const socValue=useCallback((action,value)=>new Promise((resolve,reject)=>{socket.timeout(1000).emit(action,value,(err,response)=>{if((response===null||response===void 0?void 0:response.status)==='ok'){resolve(response);}else{reject(err);}});}),[socket]);const sendNewMessage=useCallback(message=>socValue('newMessage',message),[socValue]);const createChannel=useCallback(name=>socValue('newChannel',{name}).then(res=>dispatch(channelsActions.addChannel(res.data))).then(res=>dispatch(channelsActions.setChannelId(res.payload.id))),[dispatch,socValue]);const removeChannel=useCallback(id=>socValue('removeChannel',{id}),[socValue]);const renameChannel=useCallback((id,name)=>socValue('renameChannel',{id,name}),[socValue]);const values=useMemo(()=>({sendNewMessage,createChannel,removeChannel,renameChannel}),[createChannel,removeChannel,renameChannel,sendNewMessage]);return/*#__PURE__*/_jsx(ChatContext.Provider,{value:values,children:children});};export{ChatProvider};export default ChatContext;","map":{"version":3,"names":["createContext","useEffect","useMemo","useCallback","useDispatch","actions","messagesActions","channelsActions","jsx","_jsx","ChatContext","ChatProvider","_ref","socket","children","dispatch","on","message","addMessage","channel","addChannel","payload","removeChannel","id","renameChannel","changes","socValue","action","value","Promise","resolve","reject","timeout","emit","err","response","status","sendNewMessage","createChannel","name","then","res","data","setChannelId","values","Provider"],"sources":["/home/jenmaru/hexletproject/frontend-project-12/frontend/src/contexts/chatContext.jsx"],"sourcesContent":["import {\n  createContext, useEffect, useMemo, useCallback,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as messagesActions } from '../slices/Messages.js';\nimport { actions as channelsActions } from '../slices/Channels.js';\n\nconst ChatContext = createContext({});\n\nconst ChatProvider = ({ socket, children }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    socket.on('newMessage', (message) => {\n      dispatch(messagesActions.addMessage(message));\n    });\n\n    socket.on('newChannel', (channel) => {\n      dispatch(channelsActions.addChannel(channel));\n    });\n\n    socket.on('removeChannel', (payload) => {\n      dispatch(channelsActions.removeChannel(payload.id));\n    });\n\n    socket.on('renameChannel', (payload) => {\n      dispatch(channelsActions.renameChannel({ id: payload.id, changes: payload }));\n    });\n  }, [dispatch, socket]);\n\n  const socValue = useCallback((action, value) => (new Promise((resolve, reject) => {\n    socket.timeout(1000).emit(action, value, (err, response) => {\n      if (response?.status === 'ok') {\n        resolve(response);\n      } else {\n        reject(err);\n      }\n    });\n  })), [socket]);\n\n  const sendNewMessage = useCallback((message) => socValue('newMessage', message), [socValue]);\n\n  const createChannel = useCallback((name) => socValue('newChannel', { name })\n    .then((res) => dispatch(channelsActions.addChannel(res.data)))\n    .then((res) => dispatch(channelsActions.setChannelId(res.payload.id))), [dispatch, socValue]);\n\n  const removeChannel = useCallback((id) => socValue('removeChannel', { id }), [socValue]);\n\n  const renameChannel = useCallback((id, name) => socValue('renameChannel', { id, name }), [socValue]);\n\n  const values = useMemo(() => ({\n    sendNewMessage,\n    createChannel,\n    removeChannel,\n    renameChannel,\n  }), [createChannel, removeChannel, renameChannel, sendNewMessage]);\n\n  return (\n    <ChatContext.Provider value={values}>\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport { ChatProvider };\nexport default ChatContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}