{"ast":null,"code":"import { _ as _defineProperty, a as _typeof, b as _inherits, c as _createSuper, d as _createClass, e as _classCallCheck } from './_rollupPluginBabelHelpers-b1794394.js';\nimport React, { createContext, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Rollbar from 'rollbar';\nimport { i as invariant } from './tiny-invariant.esm-c1395f98.js';\nimport constants, { LEVEL_DEBUG, LEVEL_CRITICAL } from './constant.js';\nvar VALID_LEVELS = constants;\nfunction value(val, defaultTo) {\n  if (typeof val === 'function') {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    return val.apply(void 0, args);\n  }\n  return val;\n}\nfunction isValidLevel(level) {\n  return VALID_LEVELS[level] >= VALID_LEVELS[LEVEL_DEBUG] && VALID_LEVELS[level] <= VALID_LEVELS[LEVEL_CRITICAL];\n}\nfunction isRollbarInstance(instance) {\n  var _instance$options;\n  return !!(instance !== null && instance !== void 0 && (_instance$options = instance.options) !== null && _instance$options !== void 0 && _instance$options.accessToken);\n}\nvar Context = /*#__PURE__*/createContext();\nContext.displayName = 'Rollbar';\nvar RollbarInstance = Symbol('RollbarInstance');\nvar BaseOptions = Symbol('BaseOptions');\nvar RollbarCtor = Symbol('RollbarCtor');\nfunction getRollbarFromContext(context) {\n  var rollbar = context[RollbarInstance];\n  return rollbar;\n}\nfunction getRollbarConstructorFromContext(context) {\n  var ctor = context[RollbarCtor];\n  return ctor;\n}\nvar Provider = /*#__PURE__*/function (_Component) {\n  _inherits(Provider, _Component);\n  var _super = _createSuper(Provider);\n  function Provider(props) {\n    var _this;\n    _classCallCheck(this, Provider);\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n      config = _this$props.config,\n      _this$props$Rollbar = _this$props.Rollbar,\n      ctor = _this$props$Rollbar === void 0 ? Rollbar : _this$props$Rollbar,\n      instance = _this$props.instance;\n    invariant(!instance || isRollbarInstance(instance), '`instance` must be a configured instance of Rollbar');\n    var options = typeof config === 'function' ? config() : config;\n    var rollbar = instance || new ctor(options); // TODO: use isUncaught to filter if this is 2nd Provider added\n    // unless customer wants that\n\n    _this.state = {\n      rollbar: rollbar,\n      options: options\n    };\n    return _this;\n  } // componentDidUpdate()\n\n  _createClass(Provider, [{\n    key: \"render\",\n    value: function render() {\n      var _ref;\n      var _this$props2 = this.props,\n        children = _this$props2.children,\n        _this$props2$Rollbar = _this$props2.Rollbar,\n        ctor = _this$props2$Rollbar === void 0 ? Rollbar : _this$props2$Rollbar;\n      var _this$state = this.state,\n        rollbar = _this$state.rollbar,\n        options = _this$state.options;\n      return /*#__PURE__*/React.createElement(Context.Provider, {\n        value: (_ref = {}, _defineProperty(_ref, RollbarInstance, rollbar), _defineProperty(_ref, BaseOptions, options), _defineProperty(_ref, RollbarCtor, ctor), _ref)\n      }, children);\n    }\n  }]);\n  return Provider;\n}(Component);\n_defineProperty(Provider, \"propTypes\", {\n  Rollbar: PropTypes.func,\n  config: function config(props, propName, componentName) {\n    if (!props.config && !props.instance) {\n      return new Error(\"One of the required props 'config' or 'instance' must be set for \".concat(componentName, \".\"));\n    }\n    if (props.config) {\n      var configType = _typeof(props.config);\n      if (configType === 'function' || configType === 'object' && !Array.isArray(configType)) {\n        return;\n      }\n      return new Error(\"\".concat(propName, \" must be either an Object or a Function\"));\n    }\n  },\n  instance: function instance(props, propName, componentName) {\n    if (!props.config && !props.instance) {\n      return new Error(\"One of the required props 'config' or 'instance' must be set for \".concat(componentName, \".\"));\n    }\n    if (props.instance && !isRollbarInstance(props.instance)) {\n      return new Error(\"\".concat(propName, \" must be a configured instance of Rollbar\"));\n    }\n  },\n  children: PropTypes.node\n});\nexport { BaseOptions as B, Context as C, Provider as P, RollbarInstance as R, RollbarCtor as a, getRollbarConstructorFromContext as b, getRollbarFromContext as g, isValidLevel as i, value as v };","map":{"version":3,"names":["VALID_LEVELS","constants","value","val","defaultTo","_len","arguments","length","args","Array","_key","apply","isValidLevel","level","LEVEL_DEBUG","LEVEL_CRITICAL","isRollbarInstance","instance","_instance$options","options","accessToken","Context","createContext","displayName","RollbarInstance","Symbol","BaseOptions","RollbarCtor","getRollbarFromContext","context","rollbar","getRollbarConstructorFromContext","ctor","Provider","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","_this$props","config","_this$props$Rollbar","Rollbar","invariant","state","_createClass","key","render","_ref","_this$props2","children","_this$props2$Rollbar","_this$state","React","createElement","_defineProperty","Component","PropTypes","func","propName","componentName","Error","concat","configType","_typeof","isArray","node"],"sources":["/home/jenmaru/myProject/closerties/node_modules/@rollbar/react/src/utils.js","/home/jenmaru/myProject/closerties/node_modules/@rollbar/react/src/provider.js"],"sourcesContent":["import * as constants from './constants';\n\nconst VALID_LEVELS = constants.default;\n\nexport function value(val, defaultTo, ...args) {\n  if (typeof val === 'function') {\n    return val(...args);\n  }\n  return val;\n}\n\nexport function wrapValue(val, defaultAs) {\n  return (defaultTo, ...args) => value(val, defaultAs === undefined ? defaultTo : defaultAs, ...args);\n}\n\nexport function isValidLevel(level) {\n  return VALID_LEVELS[level] >= VALID_LEVELS[constants.LEVEL_DEBUG]\n    && VALID_LEVELS[level] <= VALID_LEVELS[constants.LEVEL_CRITICAL];\n}\n\nexport function isRollbarInstance(instance) {\n  return !!instance?.options?.accessToken;\n}\n","import React, { Component, createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Rollbar from 'rollbar';\nimport invariant from 'tiny-invariant';\nimport { isRollbarInstance } from './utils';\n\nexport const Context = createContext();\nContext.displayName = 'Rollbar';\n\nexport const RollbarInstance = Symbol('RollbarInstance');\nexport const BaseOptions = Symbol('BaseOptions');\nexport const RollbarCtor = Symbol('RollbarCtor');\n\nexport function getRollbarFromContext(context) {\n  const { [RollbarInstance]: rollbar } = context;\n  return rollbar;\n}\n\nexport function getRollbarConstructorFromContext(context) {\n  const { [RollbarCtor]: ctor } = context;\n  return ctor;\n}\n\nexport class Provider extends Component {\n  static propTypes = {\n    Rollbar: PropTypes.func,\n    config: (props, propName, componentName) => {\n      if (!props.config && !props.instance) {\n        return new Error(`One of the required props 'config' or 'instance' must be set for ${componentName}.`)\n      }\n      if (props.config) {\n        const configType = typeof props.config;\n        if (configType === 'function' || configType === 'object' && !Array.isArray(configType)) {\n          return;\n        }\n        return new Error(`${propName} must be either an Object or a Function`);\n      }\n    },\n    instance: (props, propName, componentName) => {\n      if (!props.config && !props.instance) {\n        return new Error(`One of the required props 'config' or 'instance' must be set for ${componentName}.`)\n      }\n      if (props.instance && !isRollbarInstance(props.instance)) {\n        return new Error(`${propName} must be a configured instance of Rollbar`);\n      }\n    },\n    children: PropTypes.node\n  }\n\n  constructor(props) {\n    super(props);\n    const { config, Rollbar: ctor = Rollbar, instance } = this.props;\n    invariant(\n      !instance || isRollbarInstance(instance),\n      '`instance` must be a configured instance of Rollbar'\n    );\n    const options = typeof config === 'function' ? config() : config;\n    const rollbar = instance || new ctor(options);\n    // TODO: use isUncaught to filter if this is 2nd Provider added\n    // unless customer wants that\n    this.state = { rollbar, options };\n  }\n\n\n\n  // componentDidUpdate()\n\n  render() {\n    const { children, Rollbar: ctor = Rollbar } = this.props;\n    const { rollbar, options } = this.state;\n\n    return (\n      <Context.Provider value={{ [RollbarInstance]: rollbar, [BaseOptions]: options, [RollbarCtor]: ctor }}>\n        {children}\n      </Context.Provider>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}