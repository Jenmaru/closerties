{"ast":null,"code":"import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\nimport { actions as channelsActions } from './Channels.js';\nconst messagesAdapter = createEntityAdapter();\nconst initialState = messagesAdapter.getInitialState();\nconst messages = createSlice({\n  name: 'messages',\n  initialState,\n  reducers: {\n    addMessage: messagesAdapter.addOne,\n    addMessages: messagesAdapter.addMany\n  },\n  extraReducers: builder => {\n    builder.addCase(channelsActions.removeChannel, (state, action) => {\n      const {\n        channelId\n      } = action.payload;\n      const update = Object.values(state.entities).filter(e => e.channelId !== channelId);\n      messagesAdapter.setAll(state, update);\n    });\n  }\n});\nexport const {\n  actions\n} = messages;\nexport const selectors = messagesAdapter.getSelectors(state => state.messages);\nexport default messages.reducer;","map":{"version":3,"names":["createSlice","createEntityAdapter","actions","channelsActions","messagesAdapter","initialState","getInitialState","messages","name","reducers","addMessage","addOne","addMessages","addMany","extraReducers","builder","addCase","removeChannel","state","action","channelId","payload","update","Object","values","entities","filter","e","setAll","selectors","getSelectors","reducer"],"sources":["/home/jenmaru/myProject/closerties/src/slices/Messages.js"],"sourcesContent":["import { createSlice, createEntityAdapter } from '@reduxjs/toolkit';\nimport { actions as channelsActions } from './Channels.js';\n\nconst messagesAdapter = createEntityAdapter();\nconst initialState = messagesAdapter.getInitialState();\n\nconst messages = createSlice({\n  name: 'messages',\n  initialState,\n  reducers: {\n    addMessage: messagesAdapter.addOne,\n    addMessages: messagesAdapter.addMany,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(channelsActions.removeChannel, (state, action) => {\n      const { channelId } = action.payload;\n      const update = Object.values(state.entities).filter((e) => e.channelId !== channelId);\n      messagesAdapter.setAll(state, update);\n    });\n  },\n});\n\nexport const { actions } = messages;\nexport const selectors = messagesAdapter.getSelectors((state) => state.messages);\nexport default messages.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,mBAAmB,QAAQ,kBAAkB;AACnE,SAASC,OAAO,IAAIC,eAAe,QAAQ,eAAe;AAE1D,MAAMC,eAAe,GAAGH,mBAAmB,CAAC,CAAC;AAC7C,MAAMI,YAAY,GAAGD,eAAe,CAACE,eAAe,CAAC,CAAC;AAEtD,MAAMC,QAAQ,GAAGP,WAAW,CAAC;EAC3BQ,IAAI,EAAE,UAAU;EAChBH,YAAY;EACZI,QAAQ,EAAE;IACRC,UAAU,EAAEN,eAAe,CAACO,MAAM;IAClCC,WAAW,EAAER,eAAe,CAACS;EAC/B,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACb,eAAe,CAACc,aAAa,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChE,MAAM;QAAEC;MAAU,CAAC,GAAGD,MAAM,CAACE,OAAO;MACpC,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACN,KAAK,CAACO,QAAQ,CAAC,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACP,SAAS,KAAKA,SAAS,CAAC;MACrFhB,eAAe,CAACwB,MAAM,CAACV,KAAK,EAAEI,MAAM,CAAC;IACvC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEpB;AAAQ,CAAC,GAAGK,QAAQ;AACnC,OAAO,MAAMsB,SAAS,GAAGzB,eAAe,CAAC0B,YAAY,CAAEZ,KAAK,IAAKA,KAAK,CAACX,QAAQ,CAAC;AAChF,eAAeA,QAAQ,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}