{"ast":null,"code":"var _jsxFileName = \"/home/jenmaru/hexletproject/frontend-project-12/frontend/src/components/modalComponent.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { actions } from '../slices/Modals.js';\nimport AddChannel from '../modals/add.jsx';\nimport RemoveChannel from '../modals/remove.jsx';\nimport RenameChannel from '../modals/rename.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalComponent = () => {\n  _s();\n  const dispatch = useDispatch();\n  const handleClose = () => dispatch(actions.closeModal());\n  const modal = useSelector(state => state.modal);\n  const {\n    show,\n    type\n  } = modal;\n  const toastMessage = (message, result) => {\n    const toastLabel = result === 'success' ? toast.success(message, {\n      toastId: `${message} success`\n    }) : toast.error(message, {\n      toastId: `${message} error`\n    });\n    return toastLabel;\n  };\n  const setModal = {\n    add: /*#__PURE__*/_jsxDEV(AddChannel, {\n      show: show,\n      handleClose: handleClose,\n      toast: toastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }, this),\n    remove: /*#__PURE__*/_jsxDEV(RemoveChannel, {\n      show: show,\n      handleClose: handleClose,\n      toast: toastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this),\n    rename: /*#__PURE__*/_jsxDEV(RenameChannel, {\n      show: show,\n      handleClose: handleClose,\n      toast: toastMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this),\n    closed: null\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: setModal[type]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalComponent, \"ibRTYgHcozZ9MveHJZg2LjJUe4c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ModalComponent;\nexport default ModalComponent;\nvar _c;\n$RefreshReg$(_c, \"ModalComponent\");","map":{"version":3,"names":["React","useSelector","useDispatch","toast","actions","AddChannel","RemoveChannel","RenameChannel","jsxDEV","_jsxDEV","ModalComponent","_s","dispatch","handleClose","closeModal","modal","state","show","type","toastMessage","message","result","toastLabel","success","toastId","error","setModal","add","fileName","_jsxFileName","lineNumber","columnNumber","remove","rename","closed","children","_c","$RefreshReg$"],"sources":["/home/jenmaru/hexletproject/frontend-project-12/frontend/src/components/modalComponent.jsx"],"sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { actions } from '../slices/Modals.js';\nimport AddChannel from '../modals/add.jsx';\nimport RemoveChannel from '../modals/remove.jsx';\nimport RenameChannel from '../modals/rename.jsx';\n\nconst ModalComponent = () => {\n  const dispatch = useDispatch();\n  const handleClose = () => dispatch(actions.closeModal());\n  const modal = useSelector((state) => state.modal);\n  const { show, type } = modal;\n  const toastMessage = (message, result) => {\n    const toastLabel = result === 'success' ? toast.success(message, { toastId: `${message} success` })\n      : toast.error(message, { toastId: `${message} error` });\n    return toastLabel;\n  };\n\n  const setModal = {\n    add: <AddChannel show={show} handleClose={handleClose} toast={toastMessage} />,\n    remove: <RemoveChannel show={show} handleClose={handleClose} toast={toastMessage} />,\n    rename: <RenameChannel show={show} handleClose={handleClose} toast={toastMessage} />,\n    closed: null,\n  };\n\n  return (\n    <div>\n      {setModal[type]}\n    </div>\n  );\n};\n\nexport default ModalComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,OAAOC,UAAU,MAAM,mBAAmB;AAC1C,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,aAAa,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,WAAW,GAAGA,CAAA,KAAMD,QAAQ,CAACR,OAAO,CAACU,UAAU,CAAC,CAAC,CAAC;EACxD,MAAMC,KAAK,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EACjD,MAAM;IAAEE,IAAI;IAAEC;EAAK,CAAC,GAAGH,KAAK;EAC5B,MAAMI,YAAY,GAAGA,CAACC,OAAO,EAAEC,MAAM,KAAK;IACxC,MAAMC,UAAU,GAAGD,MAAM,KAAK,SAAS,GAAGlB,KAAK,CAACoB,OAAO,CAACH,OAAO,EAAE;MAAEI,OAAO,EAAG,GAAEJ,OAAQ;IAAU,CAAC,CAAC,GAC/FjB,KAAK,CAACsB,KAAK,CAACL,OAAO,EAAE;MAAEI,OAAO,EAAG,GAAEJ,OAAQ;IAAQ,CAAC,CAAC;IACzD,OAAOE,UAAU;EACnB,CAAC;EAED,MAAMI,QAAQ,GAAG;IACfC,GAAG,eAAElB,OAAA,CAACJ,UAAU;MAACY,IAAI,EAAEA,IAAK;MAACJ,WAAW,EAAEA,WAAY;MAACV,KAAK,EAAEgB;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC9EC,MAAM,eAAEvB,OAAA,CAACH,aAAa;MAACW,IAAI,EAAEA,IAAK;MAACJ,WAAW,EAAEA,WAAY;MAACV,KAAK,EAAEgB;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACpFE,MAAM,eAAExB,OAAA,CAACF,aAAa;MAACU,IAAI,EAAEA,IAAK;MAACJ,WAAW,EAAEA,WAAY;MAACV,KAAK,EAAEgB;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACpFG,MAAM,EAAE;EACV,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,EACGT,QAAQ,CAACR,IAAI;EAAC;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACpB,EAAA,CAvBID,cAAc;EAAA,QACDR,WAAW,EAEdD,WAAW;AAAA;AAAAmC,EAAA,GAHrB1B,cAAc;AAyBpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}